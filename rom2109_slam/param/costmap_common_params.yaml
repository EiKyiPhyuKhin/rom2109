# Customized for ArloBot
max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot
obstacle_range: 1.0 # really close to the obstacles
raytrace_range: 3.0

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.125 #0.18  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
#robot_radius: 0.4509 # ArloBot
inflation_radius: 0.5  # max. distance from an obstacle at which costs are incurred for planning paths.
footprint: [[0.09938, 0.13732], [0.14932, 0.05482],[0.14932,-0.05482],[0.09938,-0.13732],[-0.12437,-0.13734],[-0.14848,-0.11437],[-0.14848,0.11437],[-0.12437,0.13734]]  # if the robot is not circular
cost_scaling_factor: 20.0  # exponential rate at which the obstacle cost drops off (default: 10)

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)
map_type: voxel
origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

#observation_sources: scan bump
observation_sources: scan

# scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
# Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note taht the max_obstacle_height is very important too!
scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3}
# Can we just set up two of these here?
#bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}

# layer definations
static:
  map_topic: /map
  subscribe_to_updates: true

obstacles_laser:
  observation_source: laser
  laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true}

inflation: 
  inflation_radius: 0.3 # robot cannot pass this outer blue region of obstacle

